<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.const int ON = 2;
const int ON = 2;
const int KEEP = 1;
const int OFF = 0;
const int INTERVAL = 5;

const int C = 100;
const int N1 = 30;
const int N2 = 70;
const int M1 = 10;
const int M2 = 90;

const int BEST1 = 40;
const int BEST2 = 60;
const int VMINOUT = 1;
const int FTRD = 3;
const int FTRU = 8;

const int W = 9;
const int U1 = 2;
const int U2 = 2;

const int P = 2;

typedef int[0, W] V;
typedef int[0, C] Q;
typedef int[0, 5*P] PUMPQ;
typedef int[OFF, ON] PUMPORDER; 

chan pumpOn, pumpOff, keep;
chan waterchan[Q], steamchan[V], pumpsensorchan[PUMPQ], pumpcontrollerchan[PUMPORDER];
chan getWaterQuantity[Q], getSteamRate[V], getPumpRate[PUMPQ];

</declaration>
	<template>
		<name x="5" y="5">STEAMBOILER</name>
		<declaration>// Place local declarations here.
PUMPORDER lo = OFF;
PUMPQ p = 5*P;
Q q = 50;
V v = 9;
int[0, INTERVAL] i = 5;

void boiling()
{
    if (q &gt;= M2)
    {
        q = q + (p - v);
        v = VMINOUT;
    } 
    else if (N2 &lt;= q &amp;&amp; q &lt; M2)
    {
        q = q + (p - v);
        v = VMINOUT;
    }
    else if (BEST2 &lt; q &amp;&amp; q &lt; N2 &amp;&amp; (p-v) == 0 &amp;&amp; v == 0)
    {
        q = q + (p - v);
        v = v + U1;
    }
    else if (BEST2 &lt; q &amp;&amp; q &lt; N2 &amp;&amp; (p - v) &lt; 0 &amp;&amp; (v - U1) &lt; W)
    {
        q = q + (p - v);
        v = v + U1;
    }
    else if (BEST2 &lt; q &amp;&amp; q &lt; N2 &amp;&amp; (p - v) &lt; 0 &amp;&amp; (v + U1) &gt;= W)
    {
        q = q + (p - v);
    }
    else if (BEST2 &lt; q &amp;&amp; q &lt; N2 &amp;&amp; (p - v) &gt; 0 &amp;&amp; v &gt; VMINOUT)
    {
        q = q + (p - v);
        v = v - U2;
    }
    else if (BEST2 &lt; q &amp;&amp; q &lt; N2 &amp;&amp; (p - v) &gt; 0 &amp;&amp; v &lt;= VMINOUT)
    {
        q = q + (p - v);
    }
    else if (BEST1 &lt;= q &amp;&amp; q &lt;= BEST2)
    {
        q = q + (p - v);
        v = W;
    }
    else if (N1 &lt;= q &amp;&amp; q &lt; BEST1 &amp;&amp; (p - v) &lt; 0)
    {
        q = q + (p - v);
        v = v - U2;
    }
    else if (N1 &lt;= q &amp;&amp; q &lt; BEST1 &amp;&amp; (p - v) &gt;= 0 &amp;&amp; (v + U1) &lt; W)
    {
        q = q + (p - v);
        v = v + U1;
    }
    else if (N1 &lt;= q &amp;&amp; q &lt; BEST1 &amp;&amp; (p - v) &gt;= 0 &amp;&amp; (v + U1 ) &gt;= W)
    {
        q = q + (p - v);
    }
    else if (q &lt; M1) 
    {
        q = q + (p - v);   
        v = VMINOUT;
    }
}</declaration>
		<location id="id0" x="-663" y="-204">
			<name x="-673" y="-238">boilingloop</name>
		</location>
		<location id="id1" x="-331" y="-476">
		</location>
		<location id="id2" x="-468" y="-519">
		</location>
		<location id="id3" x="-612" y="-519">
		</location>
		<location id="id4" x="-756" y="-450">
			<name x="-766" y="-484">idle</name>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="-738" y="-361">i == 0</label>
			<label kind="assignment" x="-731" y="-348">i = 5</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-246" y="-408">lo == OFF</label>
			<label kind="synchronisation" x="-229" y="-306">pumpOff?</label>
			<label kind="assignment" x="-374" y="-221">p = p - P</label>
			<nail x="-204" y="-374"/>
			<nail x="-255" y="-221"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-323" y="-433">lo == OFF</label>
			<label kind="synchronisation" x="-289" y="-323">keep?</label>
			<nail x="-255" y="-374"/>
			<nail x="-289" y="-263"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-357" y="-399">lo == OFF</label>
			<label kind="synchronisation" x="-374" y="-340">pumpOn?</label>
			<label kind="assignment" x="-476" y="-289">lo = ON</label>
			<nail x="-340" y="-314"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-705" y="-170">i &gt; 0</label>
			<label kind="assignment" x="-646" y="-178">boiling(),
i = i - 1</label>
			<nail x="-697" y="-136"/>
			<nail x="-629" y="-136"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-476" y="-450">lo == ON &amp;&amp; p &lt;= 4*P</label>
			<label kind="synchronisation" x="-459" y="-416">keep?</label>
			<label kind="assignment" x="-535" y="-374">p  =  p + P,
lo = OFF</label>
			<nail x="-459" y="-408"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-527" y="-493">lo == ON &amp;&amp; p &lt;= 4*P</label>
			<label kind="synchronisation" x="-569" y="-442">pumpOn?</label>
			<label kind="assignment" x="-612" y="-391">p = p + P</label>
			<nail x="-476" y="-450"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-408" y="-416">lo == ON</label>
			<label kind="synchronisation" x="-425" y="-374">pumpOff?</label>
			<label kind="assignment" x="-501" y="-331">lo = OFF</label>
			<nail x="-399" y="-365"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-416" y="-527">getPumpRate[p]!</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-595" y="-544">getSteamRate[v]!</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-790" y="-518">getWaterQuantity[q]!</label>
		</transition>
	</template>
	<template>
		<name>WATERSENSOR</name>
		<declaration>Q q;</declaration>
		<location id="id5" x="34" y="-25">
			<name x="24" y="-59">ready</name>
		</location>
		<location id="id6" x="-195" y="-25">
			<name x="-205" y="-59">idle</name>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-68" y="17">waterchan[q]!</label>
			<nail x="-85" y="25"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="select" x="-85" y="-119">recq : Q</label>
			<label kind="synchronisation" x="-119" y="-102">getWaterQuantity[recq]?</label>
			<label kind="assignment" x="-68" y="-85">q = recq</label>
			<nail x="-85" y="-76"/>
		</transition>
	</template>
	<template>
		<name>STEAMSENSOR</name>
		<declaration>V v;</declaration>
		<location id="id7" x="34" y="-136">
			<name x="24" y="-170">ready</name>
		</location>
		<location id="id8" x="-153" y="-136">
			<name x="-170" y="-170">idle</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-93" y="-93">steamchan[v]!</label>
			<nail x="-59" y="-93"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="select" x="-85" y="-221">recv : V</label>
			<label kind="synchronisation" x="-110" y="-204">getSteamRate[recv]?</label>
			<label kind="assignment" x="-34" y="-187">v = recv</label>
			<nail x="-59" y="-178"/>
		</transition>
	</template>
	<template>
		<name>PUMPSENSOR</name>
		<declaration>PUMPQ p;</declaration>
		<location id="id9" x="42" y="-51">
			<name x="32" y="-85">ready</name>
		</location>
		<location id="id10" x="-161" y="-51">
			<name x="-171" y="-85">idle</name>
		</location>
		<init ref="id10"/>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="select" x="-102" y="-136">recp : PUMPQ</label>
			<label kind="synchronisation" x="-110" y="-119">getPumpRate[recp]?</label>
			<label kind="assignment" x="-34" y="-102">p = recp</label>
			<nail x="-59" y="-93"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-119" y="-8">pumpsensorchan[p]!</label>
			<nail x="-59" y="-8"/>
		</transition>
	</template>
	<template>
		<name>PUMP</name>
		<declaration>PUMPORDER o;
</declaration>
		<location id="id11" x="170" y="-25">
			<name x="160" y="-59">ready</name>
		</location>
		<location id="id12" x="-280" y="-17">
			<name x="-290" y="-51">idle</name>
		</location>
		<init ref="id12"/>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-34" y="8">o == KEEP</label>
			<label kind="synchronisation" x="-127" y="8">keep!</label>
			<nail x="-51" y="59"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="0" y="85">o == OFF</label>
			<label kind="synchronisation" x="-170" y="85">pumpOff!</label>
			<nail x="-51" y="102"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="select" x="-119" y="-127">reco : PUMPORDER</label>
			<label kind="synchronisation" x="-136" y="-110">pumpcontrollerchan[reco]?</label>
			<label kind="assignment" x="17" y="-93">o = reco</label>
			<nail x="-51" y="-85"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-25" y="-42">o == ON</label>
			<label kind="synchronisation" x="-144" y="-34">pumpOn!</label>
			<nail x="-51" y="0"/>
		</transition>
	</template>
	<template>
		<name>CONTROLER</name>
		<declaration>PUMPORDER lo;
PUMPORDER o;
Q q;
V v;
PUMPQ p;

void makedecision() 
{
    if (q &gt; BEST2 - FTRU &amp;&amp; (p - v) &gt;= 0 &amp;&amp; p &gt; 0)
    {
        o = OFF;
    }
    else if (q &gt; BEST2 - FTRU &amp;&amp; v &gt;= 0 &amp;&amp; p == 0)
    {
        o = KEEP;
    }
    else if (BEST1 + FTRD &lt;= q &amp;&amp; q &lt;= BEST2 - FTRU)
    {
        o = KEEP;
    }
    else if (q &lt; BEST1 + FTRD &amp;&amp; p == 5*P)
    {
        o = KEEP;
    }
    else if (q &lt; BEST1 + FTRD &amp;&amp; p == 4*P &amp;&amp; lo != ON)
    {
        o = ON;
    }
    else if (q &lt; BEST1 + FTRD &amp;&amp; p &lt;= 4*P &amp;&amp; lo == ON)
    {
        o = KEEP;
    }
    else if (q &lt; BEST1 + FTRD &amp;&amp; p &lt;= 3*P)
    {
        o = ON;
    }  

    lo = o;
}</declaration>
		<location id="id13" x="17" y="-161">
		</location>
		<location id="id14" x="212" y="-238">
			<name x="202" y="-272">ready</name>
		</location>
		<location id="id15" x="85" y="-306">
			<urgent/>
		</location>
		<location id="id16" x="-51" y="-306">
			<urgent/>
		</location>
		<location id="id17" x="-195" y="-238">
			<name x="-205" y="-272">idle</name>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id13"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-178" y="-178">pumpcontrollerchan[o]!</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="assignment" x="93" y="-187">makedecision()</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="select" x="144" y="-323">recp : PUMPQ</label>
			<label kind="synchronisation" x="136" y="-306">pumpsensorchan[recp]?</label>
			<label kind="assignment" x="103" y="-272">p = recp</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="select" x="0" y="-357">recv : V</label>
			<label kind="synchronisation" x="-34" y="-340">steamchan[recv]?</label>
			<label kind="assignment" x="-8" y="-306">v = recv</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="select" x="-177" y="-323">recq : Q</label>
			<label kind="synchronisation" x="-204" y="-306">waterchan[recq]?</label>
			<label kind="assignment" x="-170" y="-289">q = recq</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
SB = STEAMBOILER();
WS = WATERSENSOR();
SS = STEAMSENSOR();
PS = PUMPSENSOR();
PP = PUMP();
CN = CONTROLER();

// List one or more processes to be composed into a system.
system SB, WS, SS, PS, PP, CN;

    </system>
	<queries>
		<query>
			<formula>A[] M1 &lt;= SB.q &amp;&amp; SB.q &lt;= M2 &amp;&amp; not deadlock
			</formula>
			<comment>basic requirement
			</comment>
		</query>
		<query>
			<formula>A[] N1 &lt;= SB.q  &amp;&amp; SB.q &lt;= N2 &amp;&amp; not deadlock
			</formula>
			<comment>normal requirement
			</comment>
		</query>
		<query>
			<formula>A[] BEST1 &lt;= SB.q &amp;&amp; SB.q &lt;= BEST2 &amp;&amp; not deadlock
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; PP.idle | PP.ready | SB.boilingloop | SB.idle | WS.idle | WS.ready | SS.idle | SS.ready
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>deallock free
			</comment>
		</query>
	</queries>
</nta>
